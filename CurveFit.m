clear all
close all
distance = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120];
reading = [455, 508, 405, 312, 253, 198, 177, 160, 144, 128, 100, 104];

readingeval = [459, 357, 280, 230, 192, 169, 151, 135, 123];
distanceeval = [25, 35, 45, 55, 65, 75, 85, 95, 105];
x = distance(2:end -2);
y = reading(2:end -2);


%CREATEFIT(Y,X,READINGEVAL,DISTANCEEVAL)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : y
%      Y Output: x
%      Validation X: readingeval
%      Validation Y: distanceeval
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 24-Sep-2023 16:26:14


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( y, x );

% Set up fittype and options.
%choose to fit data to a two term exponential model
ft = fittype( 'exp2' ); 
%choose to fit data using nonlinear least squares algorithm
opts = fitoptions( 'Method', 'NonlinearLeastSquares');


% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Compare against validation data.
%make sure that the data is in a format that can be used for validation
[xValidation, yValidation] = prepareCurveData( readingeval, distanceeval);


residual = yValidation - fitresult( xValidation );
%finds all points with undefined curve behavior and removes it from the
%calculations
nNaN = nnz( isnan( residual ) );
residual(isnan( residual )) = [];

%calculates the sum of square error
sse = norm( residual )^2;

%calculates the Root mean square error
rmse = sqrt( sse/length( residual ) );

fprintf( 'Goodness-of-validation for ''%s'' fit:\n', 'untitled fit 1' );
fprintf( '    SSE : %f\n', sse );
fprintf( '    RMSE : %f\n', rmse );
fprintf( '    %i points outside domain of data.\n', nNaN );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
% Add validation data to plot.
hold on
h(end+1) = plot( xValidation, yValidation, '*', 'MarkerFaceColor', 'w' );
hold off
legend( h, 'x vs. y', 'untitled fit 1', 'Validation Data', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'y', 'Interpreter', 'none' );
ylabel( 'x', 'Interpreter', 'none' );
grid on